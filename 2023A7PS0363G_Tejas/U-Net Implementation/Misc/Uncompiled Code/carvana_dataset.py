{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOY4tSxEro7nT3ZmyQYVnUn"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"id":"T9u1HqBHhiPl","executionInfo":{"status":"ok","timestamp":1731787788761,"user_tz":0,"elapsed":438,"user":{"displayName":"Tejas Singh","userId":"15472033770013183088"}}},"outputs":[],"source":["import os\n","from PIL import Image\n","from torch.utils.data.dataset import Dataset\n","from torchvision import transforms\n","\n","class CarvanaDataset(Dataset):\n","    def __init__(self, root_path, test=False):\n","        self.root_path = root_path\n","        if test:\n","            self.images = sorted([root_path+\"/manual_test/\"+i for i in os.listdir(root_path+\"/manual_test/\")])\n","            self.masks = sorted([root_path+\"/manual_test_masks/\"+i for i in os.listdir(root_path+\"/manual_test_masks/\")])\n","        else:\n","            self.images = sorted([root_path+\"/train/\"+i for i in os.listdir(root_path+\"/train/\")])\n","            self.masks = sorted([root_path+\"/train_masks/\"+i for i in os.listdir(root_path+\"/train_masks/\")])\n","\n","        self.transform = transforms.Compose([\n","            transforms.Resize((512, 512)),\n","            transforms.ToTensor()])\n","\n","    def __getitem__(self, index):\n","        img = Image.open(self.images[index]).convert(\"RGB\")\n","        mask = Image.open(self.masks[index]).convert(\"L\")\n","\n","        return self.transform(img), self.transform(mask)\n","\n","    def __len__(self):\n","        return len(self.images)"]}]}